<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pers.wong.kec.dao.dao.MessagePushMapper">
  <resultMap id="BaseResultMap" type="pers.wong.kec.domain.entity.MessagePush">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="receiver" jdbcType="VARCHAR" property="receiver" />
    <result column="sender" jdbcType="VARCHAR" property="sender" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="relation_id" jdbcType="VARCHAR" property="relationId" />
    <result column="message_type" jdbcType="VARCHAR" property="messageType" />
    <result column="operation_type" jdbcType="VARCHAR" property="operationType" />
    <result column="read_flag" jdbcType="VARCHAR" property="readFlag" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
  </resultMap>

  <select id="selectUserMessage" resultType="pers.wong.kec.domain.responsedto.MessagePushResponseDTO">
    SELECT m.id AS messageId, m.receiver AS receiver, m.sender as sender, u.`name` AS receiverName, m.content,
      m.relation_id AS relationId, m.message_type as messageType, m.operation_type as operationType,m.read_flag AS readFlag,
      m.`status`, m.create_time AS createTime, m.update_user AS updateUser
    FROM message_push m
    INNER JOIN `user` u
    ON m.receiver = u.id
    WHERE m.receiver = #{userId} and m.status = '0'
    ORDER BY readFlag, createTime DESC
  </select>

  <select id="getNumOfUnreadMessage" resultType="java.lang.Integer">
    SELECT
      COUNT( 1 )
    FROM
      message_push
    WHERE
      receiver = #{userId}
      AND read_flag = '0' AND `status` = '0'
  </select>
</mapper>